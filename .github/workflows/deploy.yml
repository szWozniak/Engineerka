name: Build Docker Images

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  test-backend:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Run tests
        working-directory: ./backend
        run: ./gradlew test


  build-backend-develop:
    if: github.event.pull_request.merged == true
    needs: test-backend
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Build backend
        working-directory: ./backend
        run: ./gradlew clean build

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.dockerhub_username }}
          DOCKER_PASSWORD: ${{ secrets.dockerhub_password }}
        run: docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io

      - name: Extract commit hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push multi-architecture image
        working-directory: ./backend
        run: |
          docker buildx build -f Dockerfile-dev --platform linux/amd64,linux/arm64 \
            -t pejdzor/dronhub_backend_develop:latest \
            -t pejdzor/dronhub_backend_develop:${{ env.COMMIT_HASH }} \
            --push .
      
      

  build-backend-production:
    if: github.event.pull_request.merged == true
    needs: test-backend
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Build backend
        working-directory: ./backend
        run: ./gradlew clean build

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.dockerhub_username }}
          DOCKER_PASSWORD: ${{ secrets.dockerhub_password }}
        run: docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io

      - name: Extract commit hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push multi-architecture image
        working-directory: ./backend
        run: |
          docker buildx build -f Dockerfile-prod --platform linux/amd64,linux/arm64 \
            -t pejdzor/dronhub_backend:latest \
            -t pejdzor/dronhub_backend:${{ env.COMMIT_HASH }} \
            --push .

  build-frontend:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: v22.2.0

      - name: Run npm install
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.dockerhub_username }}
          DOCKER_PASSWORD: ${{ secrets.dockerhub_password }}
        run: docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io

      - name: Extract commit hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push multi-architecture image
        working-directory: ./frontend
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t pejdzor/dronhub_frontend:latest \
            -t pejdzor/dronhub_frontend:${{ env.COMMIT_HASH }} \
            --push .

  build-simulator:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.dockerhub_username }}
          DOCKER_PASSWORD: ${{ secrets.dockerhub_password }}
        run: docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io

      - name: Extract commit hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push multi-architecture image
        working-directory: ./simulator
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t pejdzor/dronhub_simulator:latest \
            -t pejdzor/dronhub_simulator:${{ env.COMMIT_HASH }} \
            --push .
